// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Infrastructure_Layer.DbContext_Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20230901010405_004_Data")]
    partial class _004_Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Core_Layer.Domain.Entity_Classes.HumiditySensor", b =>
                {
                    b.Property<Guid>("HumidityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HumidityTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("HumidityValue")
                        .HasColumnType("float");

                    b.HasKey("HumidityId");

                    b.ToTable("Humidities", (string)null);

                    b.HasData(
                        new
                        {
                            HumidityId = new Guid("ccef2a9f-fe68-49c8-b949-12ef9943de6b"),
                            HumidityTime = new DateTime(2023, 9, 1, 8, 4, 5, 69, DateTimeKind.Local).AddTicks(8301),
                            HumidityValue = 93.25
                        });
                });

            modelBuilder.Entity("WebApi.Core_Layer.Domain.Entity_Classes.TemperatureSensor", b =>
                {
                    b.Property<Guid>("TemperatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TemperatureTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TemperatureValue")
                        .HasColumnType("float");

                    b.HasKey("TemperatureId");

                    b.ToTable("Temperatures", (string)null);

                    b.HasData(
                        new
                        {
                            TemperatureId = new Guid("4270424e-1b48-4207-9c03-db4cfcb6a981"),
                            TemperatureTime = new DateTime(2023, 9, 1, 8, 4, 5, 69, DateTimeKind.Local).AddTicks(8289),
                            TemperatureValue = 26.550000000000001
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
