// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Infrastructure_Layer.DbContext_Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20230806084612_003_Data")]
    partial class _003_Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Core_Layer.Domain.Entity_Classes.HumiditySensor", b =>
                {
                    b.Property<Guid>("HumidityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HumidTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("HumidityValue")
                        .HasColumnType("float");

                    b.HasKey("HumidityId");

                    b.ToTable("Humidities", (string)null);

                    b.HasData(
                        new
                        {
                            HumidityId = new Guid("bf0eb6c2-16d4-486b-87ed-b915f85d1fe5"),
                            HumidTime = new DateTime(2023, 8, 6, 15, 46, 12, 285, DateTimeKind.Local).AddTicks(2828),
                            HumidityValue = 93.25
                        });
                });

            modelBuilder.Entity("WebApi.Core_Layer.Domain.Entity_Classes.TemperatureSensor", b =>
                {
                    b.Property<Guid>("TemperatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TemperatureTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TemperatureValue")
                        .HasColumnType("float");

                    b.HasKey("TemperatureId");

                    b.ToTable("Temperatures", (string)null);

                    b.HasData(
                        new
                        {
                            TemperatureId = new Guid("8516d663-e99c-408e-ae55-752b5abf6905"),
                            TemperatureTime = new DateTime(2023, 8, 6, 15, 46, 12, 285, DateTimeKind.Local).AddTicks(2816),
                            TemperatureValue = 26.550000000000001
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
